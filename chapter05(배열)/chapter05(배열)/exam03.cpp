//배열에 대한 실습 -3
//범위기반 for 루프와 참조자에 대해서 살펴보도록 하자.

//#include <iostream>
//using namespace std;
//
//int main(void) {
//
//	int list[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	//범위기반 for 루프
//	//list 라는 배열이라는 데이터 집합으로부터 0번째 인덱스의 값부터 마지막 인덱스까지 해당하는 값을 계속 복사를 하면서 출력을 한다.
//	for (int& i : list) {
//		i = i * i;	//참조자는 주소를 알고 있기에 해당 배열의 값을 변경을 시킬 수 있다.
//		//cout << i << " ";	//이 순간만 값이 바뀌게 된다.
//	}
//	//위의 코드로 원본 배열의 값을 변경을 하고자 하였으나 전혀 변경이 없다.
//	for (int i : list) {
//		cout << i << " ";
//	}
//	cout << endl;
//	
//	//참조자(reference) : 변수를 하나 선언하면 그 데이터 타입에 맞게끔 메모리에 컴파일러가 데이터 타입의 크기만큼 할당시켜 준다. 그러면서 주소가 생긴다.
//	//참조자라는 것이 바로 할당된 메모리 공간에 다른 이름을 붙이는 것이라고 보시면 된다. 자신이 참조하는 변수를 대신할 수 있는 또 하나의 이름이고 쉽게 말하면 별명이라고 보면된다.
//	int score1 = 10;
//	//score1을 참조하는 score2, 아울러 참조를 하고 있기 떄문에  같은 메모리 공간주소를 가진다.
//	int& score2 = score1;
//	//참조자는 선언할 때 조건이 있는데 이미 선언되어져 있는 변수에 대해서 선언이 가능하다.
//	//int& num1 = 2; //참조자는 상ㅇ수에 대한 참조는 불가능하다.
//	//int& num2;	//참조하는 값이 없는 경우에도 역시 선언 불가능
//	//int* num3 = NULL;	//NULL값도 참조가 불가능하다.
//	cout << score1 << endl;
//	cout << score2 << endl;
//
//	cout << &score1 << endl;
//	cout << &score2 << endl;
//	return 0;
//}